<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Lab3" ignored="0" name="Default test" tests="1" failures="0" timestamp="08 abr 2019 11:43:13 GMT" time="0.095" errors="0">
  <testcase name="@BeforeClass setUpTest" time="0.043" classname="testingauto.Tests">
    <failure type="org.apache.poi.EmptyFileException" message="The supplied file was empty (zero bytes long)">
      <![CDATA[org.apache.poi.EmptyFileException: The supplied file was empty (zero bytes long)
at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:217)
at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:167)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:254)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:226)
at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:205)
at data.Data.<init>(Data.java:34)
at testingauto.Tests.setUpTest(Tests.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setUpTest -->
  <testcase name="@BeforeMethod init" time="0.0" classname="testingauto.Tests">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeMethod runTest" time="0.0" classname="testingauto.Tests">
    <skipped/>
  </testcase> <!-- @BeforeMethod runTest -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="testingauto.Tests">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="reserveDefaultFlightTest" time="0.0" classname="testingauto.Tests">
    <skipped/>
  </testcase> <!-- reserveDefaultFlightTest -->
</testsuite> <!-- Default test -->
